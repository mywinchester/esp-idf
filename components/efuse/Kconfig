menu "eFuse 位管理器"

    config EFUSE_CUSTOM_TABLE
        bool "使用自定义 eFuse 表"
        default n
        help
            允许从CSV文件生成eFuse的结构。

    config EFUSE_CUSTOM_TABLE_FILENAME
        string "自定义 eFuse CSV 文件"
        depends on EFUSE_CUSTOM_TABLE
        default "main/esp_efuse_custom_table.csv"
        help
            自定义eFuse CSV文件的名称。此路径相对于项目根目录进行评估。

    config EFUSE_VIRTUAL
        bool "在 RAM 中模拟 eFuse 操作"
        default n
        help
            如果为"n" - 无虚拟模式。所有eFuse操作都是真实的，并使用eFuse寄存器。
            如果为"y" - 虚拟模式被启用，所有eFuse操作（读和写）都被重定向到RAM而不是eFuse寄存器，
            所有永久性更改（通过eFuse）都被禁用。日志输出将显示将要应用的更改，但实际上不会应用。

            如果为"y"，则不能使用SECURE_FLASH_ENCRYPTION_MODE_RELEASE。
            因为EFUSE VIRT模式仅用于测试。

            在启动期间，eFuses被复制到RAM中。这种模式对于快速测试很有用。

    config EFUSE_VIRTUAL_KEEP_IN_FLASH
        bool "在闪存中保留 eFuses"
        depends on EFUSE_VIRTUAL
        help
            除了"在RAM中模拟eFuse操作"选项外，此选项只是添加了一个功能，
            在重启后将eFuses保存在闪存中。要使用此模式，partition_table应该有`efuse`分区。
            partition.csv: "efuse_em, data, efuse,   ,   0x2000,"

            在启动期间，eFuses从闪存复制，或者如果闪存为空，则从真实eFuse复制到RAM，然后更新闪存。
            当需要在重启后保持更改时（测试secure_boot和flash_encryption），这种模式很有用。

    config EFUSE_VIRTUAL_LOG_ALL_WRITES
        bool "记录所有虚拟写入"
        depends on EFUSE_VIRTUAL
        help
            如果启用，记录efuse烧写。这将显示将要进行的更改。

    choice EFUSE_CODE_SCHEME_SELECTOR
        prompt "编码方案兼容性"
        default EFUSE_CODE_SCHEME_COMPAT_3_4
        depends on IDF_TARGET_ESP32
        help
            eFuse编码方案选择器。

        config EFUSE_CODE_SCHEME_COMPAT_NONE
            bool "仅无"
        config EFUSE_CODE_SCHEME_COMPAT_3_4
            bool "3/4 和无"
        config EFUSE_CODE_SCHEME_COMPAT_REPEAT
            bool "重复、3/4 和无（通用表不支持）"
    endchoice

    config EFUSE_MAX_BLK_LEN
        int "最大块长度"
        default 256 if EFUSE_CODE_SCHEME_COMPAT_NONE
        default 192 if EFUSE_CODE_SCHEME_COMPAT_3_4
        default 128 if EFUSE_CODE_SCHEME_COMPAT_REPEAT
        default 256 if !IDF_TARGET_ESP32

endmenu
